package qa.guru.allure;

import com.codeborne.selenide.Configuration;

import io.qameta.allure.*;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;


public class LabelsTests {

    @BeforeAll
    static void setUp() {

        Configuration.pageLoadStrategy = "eager";
    }

    private static final String REPOSITORY = "eroshenkoam/allure-example"; // REPOSITORY: строка, содержащая имя репозитория на GitHub, который будет использоваться в тесте. В данном случае - eroshenkoam/allure-example.
    private static final int ISSSUE = 80; // ISSSUE: целочисленная переменная, содержащая номер issue (задачи/проблемы) в репозитории, которая будет проверяться. Тут это число 80.

    @Test // Эта аннотация указывает, что следующий метод является тестовым. Он будет выполняться фреймворком тестирования (например, JUnit или TestNG) в процессе тестирования приложения.
    @Feature("Issue для репозитория") //Эта аннотация используется для группировки тестов по функциональным возможностям или характеристикам. В данном случае она указывает, что тест относится к функционалу, связанному с "Issue" (проблемами) в репозитории.
    @Story("Создание Issue") // Эта аннотация обозначает конкретную историю внутри запланированной функции (фичи). Она предполагает, что тест проверяет возможность создания "Issue".
    @Owner("Данилов Алексей") //Указывает имя владельца теста или разработчика, который его создал. Это может быть полезно для отслеживания, кто отвечает за данный тест и кому можно обратиться в случае вопросов или проблем.
    @Severity(SeverityLevel.BLOCKER) // Указывает уровень серьезности теста. В данном случае уровень "BLOCKER" обозначает важные тесты, которые блокируют дальнейшую работу приложения. Обычно такие тесты выполняются в первую очередь.
    @Link(value = "Testing", url = "https://testing.github.com") // Используется для добавления ссылки в отчете о тестировании. Это может быть полезно для указания на документацию или задачу в системе отслеживания ошибок. Пользователь может кликнуть на ссылку, чтобы перейти по указанному URL.
    @DisplayName("Создание issue для авторизованного пользователя") // Эта аннотация позволяет задать человекочитаемое название теста, которое будет отображаться в отчетах и может быть более понятным, чем название метода. В данном случае название указывает, что тест относится к созданию "Issue" от имени авторизованного пользователя.
    public void testStaticLabels() {


    }

    @Test
    public void testDinamicLabels() {

        Allure.getLifecycle().updateTestCase( // Это метод, который позволяет обновить информацию о текущем тестовом случае. getLifecycle() возвращает объект, который управляет жизненным циклом тестов в Allure, а updateTestCase(...) позволяет модифицировать метаданные теста.
                t -> t.setName("Создание issue для авторизованного пользователя") //В данном случае, передается лямбда-функция t -> t.setName("Создание issue для авторизованного пользователя"), которая устанавливает название теста в отчетах.
        );
        Allure.feature("Issue для репозитория"); //Эта строка маркирует тестовой информацию с помощью "функции" (feature) "Issue для репозитория". Это помогает группировать тесты и показывает, к какой функциональности они относятся.
        Allure.story("Создание Issue"); //Здесь задается "история" (story) "Создание Issue", что позволяет детализировать конкретные действия или требования в рамках данной функциональности, а также показывает, что именно тестируется в рамках этой истории.
        Allure.label("owner", "Данилов Алексей"); //Этот метод добавляет метку (label) к тесту с именем владельца. В этом случае, владелец теста указан как "Данилов Алексей". Это может помочь при отслеживании ответственности за тесты.
        Allure.label("severity", SeverityLevel.CRITICAL.value()); //Здесь добавляется метка (label) для обозначения уровня серьезности теста. В данном случае уровень серьезности установлен как "CRITICAL" (критический), что указывает на то, что этот тест имеет высокую приоритетность.
        Allure.link("Testing","https://testing.github.com"); //Этот метод добавляет ссылку (link) к тесту. Первый параметр ("Testing") – это название ссылки, а второй параметр – фактический URL, на который можно перейти. Это может быть полезно для сопоставления с документацией или задачами в системе отслеживания ошибок.

    }

}
